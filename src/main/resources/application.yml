spring:
  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:guest}
    password: ${RABBIT_MQ_PASSWORD:guest}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:${DATASOURCE_DBTYPE:mysql}://${DATASOURCE_HOST:localhost}:${DATASOURCE_PORT:3306}/os_base_auth?characterEncoding=UTF-8&useUnicode=true&useSSL=false&allowPublicKeyRetrieval=true
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:root123}
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 20

opensabre:
  oauth2:
    issuer-uri: http://www.opensabre.io:8000

management:
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  level:
    org.apache.ibatis: debug
    java.sql.PreparedStatement: debug
    org.springframework.web: debug
    org.springframework.security: debug
    org.springframework.security.oauth2: debug
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: trace
    org.springframework.security.web.FilterChainProxy: trace # 过滤器执行顺序
    org.springframework.security.web.access.ExceptionTranslationFilter: trace #异常处理

mybatis-plus:
  global-config:
    db-config:
      table-prefix: oauth2_

